

performance testing--is a practice conducted to determine how  a system performs in terms of
resoponsivness and stability under a particular workload. it can also serve to investigate,measure,validate
or verify other quality attributes of the system ,such as scalability,reliability and resource usage.

term-definition


common terminologies

connection time--time to connect to server from client
Response time--it is a meausre of how responsive an application or subsystem is to a client

througput--indicates the number of transaction per second an applicaiton
can handle,the amount of transactions produced over time during  a test.
requests per second,calls per day, hits per second, reposrts per year etc



scenarios--in the context of performance testing, a scenaio is a sequence of steps in your appliation. A scenario can
represent a use case or a business fucntion such as searching a product catalog, adding an item to a shipping cart, or placing
an order.


non functional requrements--requirements that do not relate to the functionin of the system, but to other
aspects of the system such as reliability ,usability and perofrmance

performance engineering--- activites designed to ensure a system will be designed and implemented to meet specific
non functional requirements. often takes place followeing completion of testing activites that highlight weakness in the
design and implementation

perfromance test plan-- typically a written document that details the objectives, scope, approach, deliverables, schedule,
risks, data and test environment needs for testing on a specific project,

performance testing---testing designed to determine the peroformance levels of a system




reliability----related to reliability ,reliabiltiy is the degree to which a system provided the same results for the same
action over time under load



scalability---the degreee to which a  system's perforamnce and capacity can be increased typically by increasing availiable
hardware resources within a set of servers. )( vertical scaling)
or increaisng the number of servers avaliables to service
requests(horizontal scaling
)


soak testing-- a type of performance testing used to evaluate the behaviour of a system or component when the system is suvjected to e
expected load over a sustained period of time







bottleneck-- used to describe a single part of a system that prevents further processing or significantly
degrades the performances of the system as a whole


capacity--the degree to which a system can perform data processing until performance
degrades. For example, the number of new customers being added
to a database

concurrecny--normally this means the number of simultaneous virtual users driving transactions across the user journey
in a given performance test scenarios, but can also mean the number of transactiosn
synchronised to happen at exactly the same point.



 key performance indicators---the set of targets which set the expected performance
 targets within the production system. these may include page response times (e.g. 99% of pages loaded 2 seconds ,user
 concurrency ,batch processing times, data throughput volumes, transacgtion faiulure rates, and underlying  infrastructure
  behaviour (e.g. maximum Average cpu used ,MInimum free memorey available, thresoldhs for remaining physical storage /disk usage, logging space etc



load testing---a type of perforamne testing used to evaluate the behaviour of a system or component
when the load on the system (via users and transaction) progressively increases up to and including peak levels



spike testing-- a type of performance testing used to evaluate the behaviour of a system or component when subjected to large short-ter changes
in demand .normally this is to test how the system responds to large increases in demand e.g. user logins, black fridays- like sales events etc;


Stability - The degree to which a system exhibits failures and errors when under normal usage. For example, erroneous errors when registering new users under load.

Stress Testing - A type of Performance Testing used to evaluate the behaviour of a system or component when subjected to load beyond the anticipated workload or by reducing the resources the system can use, such as CPU or memory.
Transaction Volume Model (TVM) - A document detailing the user journeys to be simulated, the click-path steps that make up the user journeys and associated load / transaction volume models to be tested. This should include information regarding the geographical locale from where users will be expected to interact with the system and the method of interaction e.g. mobile vs desktop.
User Journey - The path through the system under test that a group of Virtual Users will use to simulate real users. It should be noted that key performance / volume impacting journeys should be used as it is impractical to performance test all possible User Journeys, a good rule-of-thumb is to use the 20% of User Journeys that generate 80% of the volume.
Virtual User - A simulated user that performs actions as a real user would during the execution of a test.